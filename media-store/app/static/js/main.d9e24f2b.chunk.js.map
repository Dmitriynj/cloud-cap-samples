{"version":3,"sources":["Track.js","handleError.js","GlobalContext.js","TracksPage.js","CurrentPageHeader.js","Header.js","Router.js","App.js","serviceWorker.js","index.js"],"names":["Track","name","composer","genreName","unitPrice","isOwned","isSelected","style","borderRadius","title","bordered","fontWeight","handleError","error","ERROR_PAGES","push","response","console","log","status","GlobalContext","createContext","loading","setLoading","useGlobals","useContext","GlobalContextProvider","children","useState","value","useMemo","loadingProp","Provider","Search","Input","Option","Select","BROWSE_TRACKS_SERVICE","401","403","500","DEBOUNCE_OPTIONS","leading","trailing","config","headers","Authorization","TracksContainer","history","useHistory","currentPage","pages","PAGE_LIMIT","pagination","setPagination","trackItems","setTrackItems","undefined","tracks","setTracks","genres","setGenres","isMy","substr","genreIds","$skip","$top","searchOptions","setSearchOptions","useEffect","axios","get","then","data","catch","isEmpty","map","ID","genre_ID","find","key","className","span","onSearch","debounce","genresSeq","join","getByGenresIfNeeded","concat","getFilteredByNameGenres","params","$filter","paramsSerializer","x","genresElements","toString","display","flexDirection","alignItems","padding","maxWidth","placeholder","size","onChange","event","target","mode","allowClear","minWidth","values","parseInt","gutter","xs","sm","md","lg","names","CurrentPageHeader","location","useLocation","height","margin","Item","pathname","Header","theme","defaultSelectedKeys","onClick","Content","Layout","ErrorPage","message","subTitle","extra","type","MyRouter","marginTop","exact","path","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9e24f2b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { PlusOutlined, MinusOutlined } from \"@ant-design/icons\";\r\n\r\nconst Track = ({\r\n  name,\r\n  composer,\r\n  genreName,\r\n  unitPrice,\r\n  isOwned,\r\n  isSelected,\r\n}) => {\r\n  return (\r\n    <Card style={{ borderRadius: 6 }} title={name} bordered={false}>\r\n      {composer && (\r\n        <div>\r\n          Compositor: <span style={{ fontWeight: 600 }}>{composer}</span>\r\n        </div>\r\n      )}\r\n      <div>\r\n        Price: <span style={{ fontWeight: 600 }}>{unitPrice}</span>\r\n      </div>\r\n      <div>\r\n        Genre: <span style={{ fontWeight: 600 }}>{genreName}</span>\r\n      </div>\r\n    </Card>\r\n\r\n    // <div style={divStyle}>\r\n    //   <span>{name}</span>\r\n    //   {isOwned && (\r\n    //     <Button type=\"primary\" shape=\"circle\" icon={<PlusOutlined />} />\r\n    //   )}\r\n    //   {isSelected && <Button danger shape=\"circle\" icon={<MinusOutlined />} />}\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport { Track };\r\n","const handleError = (error, ERROR_PAGES, push) => {\r\n  if (error.response) {\r\n    console.log(error.response.status);\r\n    console.log(error.response);\r\n    push(ERROR_PAGES[error.response.status] || \"/error\");\r\n  }\r\n};\r\n\r\nexport { handleError };\r\n","import React, { useMemo, createContext, useContext, useState } from \"react\";\r\nconst globalContext = {\r\n  loading: {},\r\n  setLoading: () => {},\r\n};\r\nconst GlobalContext = createContext(globalContext);\r\nconst useGlobals = () => useContext(GlobalContext);\r\n\r\nconst GlobalContextProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const value = useMemo(\r\n    () => ({\r\n      loading: loading,\r\n      setLoading: (loadingProp) => setLoading(loadingProp),\r\n    }),\r\n    [loading]\r\n  );\r\n\r\n  return (\r\n    <GlobalContext.Provider value={value}>{children}</GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport { GlobalContextProvider, useGlobals };\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { debounce, isEmpty } from \"lodash\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Input, Col, Row, Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { Track } from \"./Track\";\r\nimport { handleError } from \"./handleError\";\r\nimport \"./TracksPage.css\";\r\nimport { useGlobals } from \"./GlobalContext\";\r\n\r\nconst { Search } = Input;\r\nconst { Option } = Select;\r\nconst BROWSE_TRACKS_SERVICE = \"http://localhost:4004/browse-tracks\";\r\nconst ERROR_PAGES = {\r\n  401: \"/unauthorized\",\r\n  403: \"/forbidden\",\r\n  500: \"/internal-error\",\r\n};\r\nconst DEBOUNCE_TIMER = 500;\r\nconst DEBOUNCE_OPTIONS = {\r\n  leading: true,\r\n  trailing: false,\r\n};\r\n// useReducer\r\n\r\n// only for dev\r\nconst config = {\r\n  headers: {\r\n    Authorization: \"Basic dXNlcjA6\",\r\n  },\r\n};\r\n\r\nconst TracksContainer = () => {\r\n  const history = useHistory();\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    pages: null,\r\n    PAGE_LIMIT: 20,\r\n  });\r\n  const [trackItems, setTrackItems] = useState([]);\r\n  const [tracks, setTracks] = useState(undefined);\r\n  const [genres, setGenres] = useState([]);\r\n  const { loading, setLoading } = useGlobals();\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    isMy: false,\r\n    substr: \"\",\r\n    genreIds: [],\r\n    $skip: 0,\r\n    $top: 20,\r\n  });\r\n\r\n  useEffect(() => setLoading(true), []);\r\n\r\n  useEffect(() => {\r\n    if (!tracks && loading) {\r\n      axios\r\n        .get(`${BROWSE_TRACKS_SERVICE}/Tracks/$count`, config)\r\n        .then((response) =>\r\n          setPagination({ ...pagination, pages: response.data })\r\n        )\r\n        .catch((error) => handleError(error, ERROR_PAGES, history.push));\r\n\r\n      axios\r\n        .get(\r\n          `${BROWSE_TRACKS_SERVICE}/Tracks?$top=${searchOptions.$top}`,\r\n          config\r\n        )\r\n        .then((response) => setTracks(() => response.data.value))\r\n        .catch((error) => handleError(error, ERROR_PAGES, history.push))\r\n        .then(setLoading(false));\r\n\r\n      axios\r\n        .get(`${BROWSE_TRACKS_SERVICE}/Genres`, config)\r\n        .then((response) => setGenres(response.data.value))\r\n        .catch((error) => handleError(error, ERROR_PAGES, history.push));\r\n    }\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(tracks) && !isEmpty(genres)) {\r\n      setTrackItems(\r\n        tracks.map(({ ID, name, composer, genre_ID, unitPrice }) => {\r\n          const genreName = genres.find(({ ID }) => ID === genre_ID).name;\r\n          console.log(\"genreName\", genreName);\r\n          return (\r\n            <Col key={ID} className=\"gutter-row\" span={8}>\r\n              <Track\r\n                name={name}\r\n                genreName={genreName}\r\n                composer={composer}\r\n                unitPrice={unitPrice}\r\n              />\r\n            </Col>\r\n          );\r\n        })\r\n      );\r\n    }\r\n  }, [tracks, genres]);\r\n\r\n  const onSearch = debounce(\r\n    () => {\r\n      console.log(searchOptions.genreIds);\r\n      const genresSeq = searchOptions.genreIds\r\n        .map((value) => `genre_ID eq ${value}`)\r\n        .join(\" or \");\r\n      const getByGenresIfNeeded = \" and \".concat(genresSeq);\r\n      const getFilteredByNameGenres = `contains(name,'${searchOptions.substr}')`;\r\n      axios\r\n        .get(`${BROWSE_TRACKS_SERVICE}/Tracks`, {\r\n          ...config,\r\n          params: {\r\n            $top: searchOptions.$top,\r\n            $skip: searchOptions.$skip,\r\n            $filter: getFilteredByNameGenres + getByGenresIfNeeded,\r\n          },\r\n          paramsSerializer: (params) => {\r\n            const x = `$top=${searchOptions.$top}&$skip=${\r\n              searchOptions.$skip\r\n            }&$filter=${getFilteredByNameGenres + getByGenresIfNeeded}`;\r\n            console.log(x);\r\n            return x;\r\n          },\r\n        })\r\n        .then((response) => setTracks(response.data.value))\r\n        .catch((error) => handleError(error, ERROR_PAGES, history.push))\r\n        .then(() => setLoading(false));\r\n    },\r\n    DEBOUNCE_TIMER,\r\n    DEBOUNCE_OPTIONS\r\n  );\r\n\r\n  const onSelectChange = (values) => {\r\n    setSearchOptions({\r\n      ...searchOptions,\r\n      genreIds: values.map((value) => parseInt(value, 10)),\r\n    });\r\n  };\r\n\r\n  const genresElements = genres\r\n    ? genres.map(({ ID, name }) => {\r\n        return (\r\n          <Option key={ID} value={ID.toString()}>\r\n            {name}\r\n          </Option>\r\n        );\r\n      })\r\n    : [];\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Search\r\n          style={{\r\n            padding: 10,\r\n            borderRadius: 6,\r\n            maxWidth: 400,\r\n          }}\r\n          placeholder=\"Search tracks\"\r\n          size=\"large\"\r\n          onSearch={() => {\r\n            setLoading(true);\r\n            onSearch();\r\n          }}\r\n          onChange={(event) =>\r\n            setSearchOptions({ ...searchOptions, substr: event.target.value })\r\n          }\r\n        />\r\n        <Select\r\n          mode=\"multiple\"\r\n          allowClear\r\n          style={{ padding: 10, borderRadius: 6, minWidth: 100 }}\r\n          placeholder=\"Genres\"\r\n          onChange={(value) => onSelectChange(value)}\r\n        >\r\n          {genresElements}\r\n        </Select>\r\n      </div>\r\n      {/* <Divider orientation=\"left\">Popular now</Divider> */}\r\n      <div>\r\n        <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, 24]}>{trackItems}</Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { TracksContainer };\r\n","import React from \"react\";\r\nimport { Breadcrumb, Spin } from \"antd\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useGlobals } from \"./GlobalContext\";\r\n\r\nconst names = {\r\n  \"/\": \"Browse / Tracks\",\r\n  \"/account\": \"Account\",\r\n  \"/manage\": \"Manage Orders\",\r\n};\r\n\r\nconst CurrentPageHeader = () => {\r\n  const location = useLocation();\r\n  const { loading } = useGlobals();\r\n\r\n  return (\r\n    <Breadcrumb style={{ height: 20, margin: \"16px  \" }}>\r\n      <Breadcrumb.Item>{names[location.pathname]}</Breadcrumb.Item>\r\n      <Breadcrumb.Item>{loading && <Spin />}</Breadcrumb.Item>\r\n    </Breadcrumb>\r\n  );\r\n};\r\n\r\nexport { CurrentPageHeader };\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]}>\r\n      <Menu.Item key=\"1\" onClick={() => history.push(\"/\")}>\r\n        Browse\r\n      </Menu.Item>\r\n\r\n      <Menu.Item key=\"2\" onClick={() => history.push(\"/person\")}>\r\n        Profile\r\n      </Menu.Item>\r\n      <Menu.Item key=\"3\" onClick={() => history.push(\"/manage-orders\")}>\r\n        Manage orders\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport { Header };\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { Result, Button, Layout } from \"antd\";\r\nimport { TracksContainer } from \"./TracksPage\";\r\nimport { CurrentPageHeader } from \"./CurrentPageHeader\";\r\nimport { Header } from \"./Header\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst ErrorPage = ({ status, message }) => {\r\n  const history = useHistory();\r\n\r\n  const onGoHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Result\r\n      status={status}\r\n      title={status}\r\n      subTitle={message}\r\n      extra={\r\n        <Button onClick={onGoHome} type=\"primary\">\r\n          Back Home\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst MyRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Content\r\n        className=\"site-layout\"\r\n        style={{ padding: \"0 50px\", marginTop: 20 }}\r\n      >\r\n        <div style={{ padding: \"24px\" }}>\r\n          <CurrentPageHeader />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <TracksContainer />\r\n            </Route>\r\n            {/* <Route path=\"/confirm/:token\" /> */}\r\n            <Route path=\"/internal-error\">\r\n              <ErrorPage\r\n                status={500}\r\n                message={\"Sorry, something went wrong.\"}\r\n              />\r\n            </Route>\r\n            <Route path=\"/forbidden\">\r\n              <ErrorPage\r\n                status={403}\r\n                message={\"Sorry, you are not able to get this resourse.\"}\r\n              />\r\n            </Route>\r\n            <Route path=\"/unauthorized\">\r\n              <ErrorPage\r\n                status={\"error\"}\r\n                message={\r\n                  \"401, Sorry, you are not authorized to access this page.\"\r\n                }\r\n              />\r\n            </Route>\r\n            <Route path=\"/error\">\r\n              <ErrorPage\r\n                status={\"error\"}\r\n                message={\"Sorry, something went wrong\"}\r\n              />\r\n            </Route>\r\n            <Route>\r\n              <ErrorPage\r\n                status={404}\r\n                message={\"Sorry, the page you visited does not exist.\"}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Content>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport { MyRouter };\r\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport { Layout } from \"antd\";\nimport { MyRouter } from \"./Router\";\nimport { GlobalContextProvider } from \"./GlobalContext\";\n\nconst App = () => {\n  return (\n    <Layout style={{ height: \"100%\" }}>\n      <GlobalContextProvider>\n        <MyRouter />\n      </GlobalContextProvider>\n    </Layout>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}